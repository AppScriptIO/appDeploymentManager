version: '3.6'

networks: 
  "run": # for running manger container
    driver: bridge
  "build": # for building manager image
    driver: bridge 

services:

    "containerManager_run":
        image: ${dockerImage:-myuserindocker/container-manager:latest}
        environment: # pass variable to the command executed & to the dockerfile when used.
            dockerImage: ${dockerImage}
            DEPLOYMENT: ${DEPLOYMENT}
            entrypointConfigurationKey: ${entrypointConfigurationKey}
            entrypointConfigurationPath: ${entrypointConfigurationPath}
            externalAppBasePath: ${externalAppBasePath}
            dockerImageTag: ${dockerImageTag}
            dockerImageName: ${dockerImageName}
            dockerhubUser: ${dockerhubUser}
            dockerhubPass: ${dockerhubPass}
        depends_on:
            - rethinkdb_run
        networks:
            - run
        volumes:
            - ../../:/project/managerApp
            - ../../:/project/application # the application to be run is the same repository of manager repository.
            - /var/run/docker.sock:/var/run/docker.sock
        working_dir: /project/application
        command: bash -c "node /project/managerApp/source/entrypoint.js"
    "rethinkdb_run":
        image: rethinkdb:latest
        # ports:
        #     - "7081:8080"
        working_dir: /
        # volumes:
        #     # volume inside docker-machine not through Windows volume. because it causes problems otherwise.
        #     - /mnt/datadisk-1/managerApp/rethinkdbData_manager:/data/rethinkdb_data/
        networks:
            "run":
                aliases:
                    - rethinkdb

    "containerManager_build": # used as image, not meant to be run.
        build: # change context to project's root folder.
            context: ../../ # /project/application/setup/container/.dockerfile
            # dockerfile path relative to the context specified above.
            dockerfile: ./setup/container/deploymentEnvironment.imageBuild.dockerFile
            network: # add network for build runtime (dockerfile RUN commands).
                "managerApp_build" # ISSUE - docker doesn't resolve the project name, it should be specified explicitly
            args: 
                - DEPLOYMENT=${DEPLOYMENT}
                - entrypointConfigurationKey=${entrypointConfigurationKey}
                - entrypointConfigurationPath=${entrypointConfigurationPath}
                - dockerImageName=${dockerImageName:-myuserindocker/deployment-environment} # myuserindocker/container-manager
                - dockerImageTag=${dockerImageTag}
                - externalAppBasePath=${externalAppBasePath}
        image: myuserindocker/container-manager:latest # name of built image cannot be uppercase.
        # Running dependent container is handeled by the nodejs container manager app.
        # depends_on:
        #     - rethinkdb_build
        # networks:
        #     - build
    "rethinkdb_build":
        image: rethinkdb:latest
        # ports:
        #     - "7080:8080"
        working_dir: /
        # volumes:
        #     # volume inside docker-machine not through Windows volume. because it causes problems otherwise.
        #     - /mnt/datadisk-1/managerApp/rethinkdbData_build:/data/rethinkdb_data/
        networks:
            build:
                aliases:
                    - rethinkdb

